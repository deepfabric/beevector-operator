/*
Copyright The infinivision Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/infinivision/hyena-operator/pkg/apis/infinivision.com/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HyenaClusterLister helps list HyenaClusters.
type HyenaClusterLister interface {
	// List lists all HyenaClusters in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.HyenaCluster, err error)
	// HyenaClusters returns an object that can list and get HyenaClusters.
	HyenaClusters(namespace string) HyenaClusterNamespaceLister
	HyenaClusterListerExpansion
}

// hyenaClusterLister implements the HyenaClusterLister interface.
type hyenaClusterLister struct {
	indexer cache.Indexer
}

// NewHyenaClusterLister returns a new HyenaClusterLister.
func NewHyenaClusterLister(indexer cache.Indexer) HyenaClusterLister {
	return &hyenaClusterLister{indexer: indexer}
}

// List lists all HyenaClusters in the indexer.
func (s *hyenaClusterLister) List(selector labels.Selector) (ret []*v1alpha1.HyenaCluster, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HyenaCluster))
	})
	return ret, err
}

// HyenaClusters returns an object that can list and get HyenaClusters.
func (s *hyenaClusterLister) HyenaClusters(namespace string) HyenaClusterNamespaceLister {
	return hyenaClusterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HyenaClusterNamespaceLister helps list and get HyenaClusters.
type HyenaClusterNamespaceLister interface {
	// List lists all HyenaClusters in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.HyenaCluster, err error)
	// Get retrieves the HyenaCluster from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.HyenaCluster, error)
	HyenaClusterNamespaceListerExpansion
}

// hyenaClusterNamespaceLister implements the HyenaClusterNamespaceLister
// interface.
type hyenaClusterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HyenaClusters in the indexer for a given namespace.
func (s hyenaClusterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HyenaCluster, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HyenaCluster))
	})
	return ret, err
}

// Get retrieves the HyenaCluster from the indexer for a given namespace and name.
func (s hyenaClusterNamespaceLister) Get(name string) (*v1alpha1.HyenaCluster, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("hyenacluster"), name)
	}
	return obj.(*v1alpha1.HyenaCluster), nil
}
